package GUI;import Controller.Controler;import javafx.beans.value.ObservableValue;import javafx.scene.control.*;import javafx.scene.layout.HBox;import javafx.scene.layout.Pane;import javafx.scene.layout.VBox;import javafx.stage.DirectoryChooser;import javafx.stage.Stage;import java.io.File;import java.util.Observable;public class PublicationTree extends Observable {    private Stage stage;    private Pane layout;    private Controler controler;    private TreeView publicationTree;    public PublicationTree(Controler controler, Stage stage){        this.stage = stage;        this.controler = controler;        publicationTree = createTree();        layout = create();    }    public Pane get() {        return layout;    }    public void addProject(String name){        publicationTree.getRoot().getChildren().add(new TreeItem<>(name));    }    private HBox createMenu(){        Button addProject = new Button("Add");        Button remProject = new Button("Remove");        addProject.setOnAction(evt -> controler.addProject(chooseDir()));        return new HBox(addProject, remProject);    }    private TreeView<String> createTree(){        TreeItem<String> dummyRoot = new TreeItem<>();        TreeView<String> publicationTreeView = new TreeView<>(dummyRoot);        publicationTreeView.setShowRoot(false);        publicationTreeView.getRoot().getChildren().contains(publicationTreeView.getSelectionModel().getSelectedItem());        new PublicationTreeContextMenu(publicationTreeView).createContextMenu();        return publicationTreeView;    }    private boolean isProjectNode(){        Object selected = publicationTree.getSelectionModel().getSelectedItem();        TreeItem<String> ti;        try {            ti = (TreeItem<String>) selected;            if (ti.isLeaf() && !ti.getParent().equals(publicationTree.getRoot())){                return false;            } else {                return true;            }        } catch (ClassCastException e){            e.printStackTrace();        }        return false;    }    private String chooseDir(){        DirectoryChooser dirChooser = new DirectoryChooser();        File dir = dirChooser.showDialog(stage);        return dir.getName();    }    private Pane create(){        return new VBox(publicationTree, createMenu());    }}