package Model.Tasks;import Model.Projects.Project;import Model.Projects.Publications.Book;import java.io.*;import java.nio.file.Paths;import java.util.ArrayList;import java.util.Arrays;import java.util.List;public class ProcessTaskSettings {    private static ProcessTaskSettings instance = new ProcessTaskSettings();    private List<ProcessTask> definedTasks = new ArrayList<>();    public static ProcessTaskSettings getInstance() {        return instance;    }    private ProcessTaskSettings() {        definedTasks.addAll(Arrays.asList(                new ProcessTask("Copy and Renumber", Paths.get("C:\\Java\\projects\\ProcessingTasker\\script.py")),                new ProcessTask("Process to Djvu", Paths.get("C:\\Java\\projects\\ProcessingTasker\\scriptq.py"))));    }    public List<ProcessTask> getDefinedTasks() {        return definedTasks;    }    public void addDefinedTask(ProcessTask task, int ind) throws IllegalArgumentException {        if (definedTasks.contains(task)){            throw new IllegalArgumentException("This task has already been in the list");        } else {            if (ind == -1){                definedTasks.add(task);            } else {                definedTasks.add(ind, task);            }        }    }    public int remDefinedTask(ProcessTask task){        int ind = definedTasks.indexOf(task);        definedTasks.remove(task);        return ind;    }    public void writeToFile() {        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("settings.ser"))){            oos.writeObject(definedTasks);        } catch (Exception e) {            e.printStackTrace();        }    }    public void readFromFile() {        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream("settings.ser"))){            Object readObject = ois.readObject();            definedTasks = (List<ProcessTask>) readObject;        } catch (Exception e) {            e.printStackTrace();        }    }}