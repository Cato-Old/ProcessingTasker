package View.GUI.CenterPane;import Controller.Controller;import Model.Projects.Project;import javafx.geometry.HPos;import javafx.geometry.VPos;import javafx.scene.control.Button;import javafx.scene.layout.*;import javafx.scene.control.Label;import java.nio.file.Path;import java.util.Objects;import java.util.Optional;public class ProjectPane extends CenterPane {    private GridPane proPane;    public ProjectPane(Controller controller){        super(controller);    }    public Pane create(){        proPane = new GridPane();        createEmptyProjectView();        return proPane;    }    public void update(Project project){        if (project != null){            Label sourcePathLab = new Label("Path to source directory: ");            Label sourcePathVal = new Label(project.getSourcePath().toString());            Label targetPathLab = new Label("Path to target directory: ");            Label targetPathVal = new Label(Optional.ofNullable(project.getTargetPath())                                                    .map(Path::toString)                                                    .orElse("..."));            Button targetPathSet = new Button("Set catalog");            targetPathSet.setOnAction(evt -> {                try {                    controller.setTargetPath(project, controller.chooseDir());                } catch (IllegalArgumentException ignore) { }            });            proPane.getChildren().removeIf(Objects::nonNull);            proPane.getColumnConstraints().removeIf(Objects::nonNull);            proPane.getRowConstraints().removeIf(Objects::nonNull);            ColumnConstraints col1 = new ColumnConstraints();            ColumnConstraints col2 = new ColumnConstraints();            ColumnConstraints col3 = new ColumnConstraints();            col1.setPercentWidth(40);            col2.setPercentWidth(40);            col3.setPercentWidth(20);            GridPane.setConstraints(sourcePathLab,0,0,1,1);            GridPane.setConstraints(sourcePathVal,1,0,1,1);            GridPane.setConstraints(targetPathLab,0,1,1,1);            GridPane.setConstraints(targetPathVal,1,1,1,1);            GridPane.setConstraints(targetPathSet,2,1,1,1);            proPane.getColumnConstraints().addAll(col1, col2, col3);            proPane.getChildren().addAll(sourcePathLab, sourcePathVal, targetPathLab, targetPathVal, targetPathSet);        } else {            proPane.getChildren().removeIf(Objects::nonNull);            proPane.getColumnConstraints().removeIf(Objects::nonNull);            proPane.getRowConstraints().removeIf(Objects::nonNull);            createEmptyProjectView();        }    }    private void createEmptyProjectView(){        Label noProjectLab = new Label("There is no selected project");        ColumnConstraints col = new ColumnConstraints();        RowConstraints row = new RowConstraints();        col.setPercentWidth(100);        row.setPercentHeight(100);        proPane.getColumnConstraints().add(col);        proPane.getRowConstraints().add(row);        GridPane.setConstraints(noProjectLab,0,0,1,1,HPos.CENTER,VPos.CENTER);        proPane.getChildren().add(noProjectLab);    }}